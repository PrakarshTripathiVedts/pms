package com.vts.pfms.project.service;

import java.util.List;

import org.springframework.web.multipart.MultipartFile;

import com.vts.pfms.master.model.RoleMaster;
import com.vts.pfms.print.model.ProjectTechnicalWorkData;
import com.vts.pfms.project.dto.PfmsInitiationAttachmentDto;
import com.vts.pfms.project.dto.PfmsInitiationAttachmentFileDto;
import com.vts.pfms.project.dto.PfmsInitiationAuthorityDto;
import com.vts.pfms.project.dto.PfmsInitiationAuthorityFileDto;
import com.vts.pfms.project.dto.PfmsInitiationCostDto;
import com.vts.pfms.project.dto.PfmsInitiationDetailDto;
import com.vts.pfms.project.dto.PfmsInitiationDto;
import com.vts.pfms.project.dto.PfmsInitiationRequirementDto;
import com.vts.pfms.project.dto.PfmsProjectDataDto;
import com.vts.pfms.project.dto.PfmsRiskDto;
import com.vts.pfms.project.dto.PreprojectFileDto;
import com.vts.pfms.project.dto.ProjectAssignDto;
import com.vts.pfms.project.dto.ProjectMajorCarsDto;
import com.vts.pfms.project.dto.ProjectMajorConsultancyDto;
import com.vts.pfms.project.dto.ProjectMajorManPowersDto;
import com.vts.pfms.project.dto.ProjectMajorRequirementsDto;
import com.vts.pfms.project.dto.ProjectMajorWorkPackagesDto;
import com.vts.pfms.project.dto.ProjectMasterAttachDto;
import com.vts.pfms.project.dto.ProjectOtherReqDto;
import com.vts.pfms.project.dto.ProjectScheduleDto;
import com.vts.pfms.project.model.InitiationAbbreviations;
import com.vts.pfms.project.model.PfmsInitiation;
import com.vts.pfms.project.model.PfmsInitiationAppendix;
import com.vts.pfms.project.model.PfmsInitiationApproval;
import com.vts.pfms.project.model.PfmsInitiationAttachmentFile;
import com.vts.pfms.project.model.PfmsInitiationAuthorityFile;
import com.vts.pfms.project.model.PfmsInitiationChecklistData;
import com.vts.pfms.project.model.PfmsInitiationMacroDetails;
import com.vts.pfms.project.model.PfmsInitiationMacroDetailsTwo;
import com.vts.pfms.project.model.PfmsInitiationMilestone;
import com.vts.pfms.project.model.PfmsInitiationMilestoneRev;
import com.vts.pfms.project.model.PfmsInitiationSanctionData;
import com.vts.pfms.project.model.PfmsOtherReq;
import com.vts.pfms.project.model.PfmsProcurementPlan;
import com.vts.pfms.project.model.PlatformMaster;
import com.vts.pfms.project.model.ProjectAssign;
import com.vts.pfms.project.model.ProjectMactroDetailsBrief;
import com.vts.pfms.project.model.ProjectMain;
import com.vts.pfms.project.model.ProjectMajorCapsi;
import com.vts.pfms.project.model.ProjectMaster;
import com.vts.pfms.project.model.ProjectMasterRev;
import com.vts.pfms.project.model.ProjectRequirementType;
import com.vts.pfms.project.model.ProjectSqrFile;
import com.vts.pfms.project.model.ReqTestExcelFile;
import com.vts.pfms.project.model.RequirementAcronyms;
import com.vts.pfms.project.model.RequirementMembers;
import com.vts.pfms.project.model.RequirementPerformanceParameters;
import com.vts.pfms.project.model.RequirementSummary;
import com.vts.pfms.project.model.RequirementVerification;
import com.vts.pfms.project.model.RequirementparaModel;
import com.vts.pfms.requirements.model.DocMembers;
import com.vts.pfms.requirements.model.SpecifcationProductTree;
import com.vts.pfms.requirements.model.Specification;
import com.vts.pfms.requirements.model.SpecificationContent;
import com.vts.pfms.requirements.model.SpecificationIntro;

public interface ProjectService {

	public List<Object[]> ProjectIntiationList(String Empid,String LoginType,String LabCode) throws Exception ;
	public List<Object[]> ProjectTypeList() throws Exception;
	public List<Object[]> OfficerList() throws Exception;
	public Long ProjectMainAdd(ProjectMain proType ) throws Exception;
	public Long ProjectMainEdit(ProjectMain proType ) throws Exception;
	public Object[] ProjectMainEditData(String ProjectMainId) throws Exception ;
	public Long ProjectMainClose(ProjectMain proType) throws Exception;
	public List<Object[]> PfmsCategoryList() throws Exception;
	public List<Object[]> PfmsDeliverableList() throws Exception;
	public List<Object[]> InitiatedProjectList() throws Exception;
	public List<Object[]> LabList(String IntiationId) throws Exception;
	public Long ProjectIntiationAdd(PfmsInitiationDto pfmsinitiationdto,String UserId,String EmpId,String EmpName ) throws Exception;
	public Long ProjectShortNameCount(String ProjectShortName) throws Exception;
	public List<Object[]> ProjectDetailes(Long IntiationId) throws Exception;
	public List<Object[]>RequirementTypeList() throws Exception;
	//public Object[] ProjectDetailes(Long IntiationId) throws Exception;
	public List<Object[]> ProjectDetailsPreview(Long IntiationId) throws Exception;
	public Long ProjectIntiationAdd(PfmsInitiationDetailDto pfmsinitiationdetaildto,String UserId ) throws Exception;
	public List<Object[]> BudgetItem(String BudegtId) throws Exception;
	public List<Object[]> ProjectIntiationItemList(String InitiationId) throws Exception;
	public Long ProjectIntiationCostAdd(PfmsInitiationCostDto pfmsinitiationcostdto,String UserId,Object[] ProjectCost ) throws Exception;
	public int ProjectLabAdd(String [] LabId,String InitiationId,String UserId) throws Exception;
	public List<Object[]> ProjectIntiationLabList(String InitiationId) throws Exception;
	public List<Object[]> BudgetHead() throws Exception;
	public Long ProjectScheduleAdd(String[] MilestoneActivity,String[] MilestoneMonth,String[] MilestoneRemark,String InitiationId,String UserId,Object[] ProjectDetailes,Integer TotalMonth) throws Exception;
	//Line Added
	public Long ProjectScheduleAdd(String[] MilestoneActivity,String[] MilestoneMonth,int MilestoneTotalMonth, int Milestonestartedfrom,String[] MilestoneRemark,String InitiationId,String UserId,Object[] ProjectDetailes,Integer TotalMonth) throws Exception;
	public List<Object[]> ProjectIntiationScheduleList(String InitiationId) throws Exception;
	//Line Added
	public List<Object[]>ProjectScheduleTotalMonthList(String InitiationId)throws Exception;
	/*L.A*/public List<Object[]>MileStonenoTotalMonths(String InitiationId,int msno) throws Exception;
	public Object[] ProjectProgressCount(String InitiationId) throws Exception;
	public List<Object[]> ProjectIntiationDetailsList(String InitiationId) throws Exception;
	public List<Object[]> ProjectIntiationCostList(String InitiationId) throws Exception;
	public List<Object[]> ProjectEditData(String IntiationId) throws Exception;
	public int ProjectIntiationEdit(PfmsInitiationDto pfmsinitiationdto,String UserId ) throws Exception;
	public Double TotalIntiationCost(String IntiationId) throws Exception;
	public List<Object[]> ProjectCostEditData(String InitiationCostId) throws Exception;
	public int ProjectIntiationCostEdit(PfmsInitiationCostDto pfmsinitiationcostdto,String UserId,String InitiationId,String TotalCost ) throws Exception;
	public long ProjectScheduleEdit(ProjectScheduleDto projectschedule) throws Exception;
	/*L.A*/public int MilestoneTotalMonthUpdate( int newMilestoneTotalMonth,String IntiationId, String milestoneno) throws Exception;
	public int ProjectScheduleDelete(String InitiationScheduleId,String UserId,Integer MilestoneScheduleMonth,String InitiationId) throws Exception;
	public Long ProjectInitiationDetailsUpdate(PfmsInitiationDetailDto pfmsinitiationdetaildto,String UserId,String Details) throws Exception;
	public Integer ProjectScheduleMonth(String InitiationId) throws Exception;
	public Integer ProjectDurationMonth(String InitiationId) throws Exception;
	/*L.A*/public Integer MilestoneScheduleMonth(String initiationscheduleid,String IntiationId)throws Exception;
	public int ProjectScheduleEditData(String InitiationScheduleId) throws Exception;
	/*L.A*/ public int mileStonemonthprevious(String IntiationId, String milestoneno) throws Exception;
	/*L.A*/ public int milestonenototalmonth(String IntiationId, String milestoneno) throws Exception;
	public Long ProjectInitiationAttachmentAdd(PfmsInitiationAttachmentDto pfmsinitiationattachmentdto,PfmsInitiationAttachmentFileDto pfmsinitiationattachmentfiledto,String UserId) throws Exception;
	public List<Object[]> ProjectIntiationAttachment(String InitiationId) throws Exception;
	public List<Object[]> AuthorityAttachment(String InitiationId) throws Exception;
	
	public PfmsInitiationAttachmentFile ProjectIntiationAttachmentFile(String InitiationAttachmentId) throws Exception;
	public Object[] ProjectIntiationFileName(long InitiationAttachmentId) throws Exception;
	public int ProjectInitiationAttachmentDelete(String InitiationAttachmentId,String UserId) throws Exception;
	public int ProjectInitiationAttachmentUpdate(String InitiationAttachmentId,String FileName,String UserId) throws Exception;
	public String ProjectIntiationAttachmentFileName(String InitiationAttachmentId) throws Exception;
	public String ProjectIntiationAttachmentFileNamePath(String InitiationAttachmentId) throws Exception;
	public int ProjectLabDelete(String initiationlabid,String InitiationId,String UserId) throws Exception;
	public int ProjectIntiationCostDelete(String initiationcostid, String UserId,String InitiationId) throws Exception ;
	public int ProjectIntiationStatusUpdate(String InitiationId,String UserId,String EmpId,String ProjectCode) throws Exception;
	public Long ProjectForwardStatus(String InitiationId) throws Exception;
	public List<Object[]> ProjectActionList(String ProjectAuthorityId) throws Exception;
	public List<Object[]> ProjectApprovePdList(String EmpId) throws Exception;
	public int ProjectApprovePd(String InitiationId,String Remark,String UserId,String EmpId,String ProjectCode,String Status) throws Exception;
	public List<Object[]> EmployeeList(String LabCode) throws Exception;
	public List<Object[]> ProjectStatusList(String EmpId,String LoginType,String LabCode)throws Exception;
	public List<Object[]> ProjectApprovalTracking(String InitiationId) throws Exception;
	public List<Object[]> ProjectApproveRtmddoList(String EmpId) throws Exception;
	public int ProjectApproveRtmddo(String InitiationId,String Remark,String UserId,String EmpId,String ProjectCode,String Status) throws Exception;
	public List<Object[]> ProjectApproveTccList(String EmpId) throws Exception;
	public int ProjectApproveTcc(String InitiationId,String Remark,String UserId,String EmpId,String ProjectCode,String Status,String Labcode) throws Exception;
	public Double TotalIntiationFeCost(String IntiationId) throws Exception;
	public Double TotalIntiationReCost(String IntiationId) throws Exception;
	public List<Object[]> ProjectCost(Long IntiationId) throws Exception;
	public List<Object[]> TccProjectList() throws Exception;
	public List<Object[]> ExpertList() throws Exception;
	public List<Object[]> ProjectList()throws Exception;
	public List<Object[]> ProjectTypeMainList()throws Exception;
	public List<Object[]> ProjectCategoryList()throws Exception;
	public Long ProjectMasterAdd(ProjectMaster proType) throws Exception;
	public Long ProjectEdit(ProjectMaster proType) throws Exception;
	public Long ProjectClose(ProjectMaster proType) throws Exception ;	
	public Object[] ProjectEditData1(String ProjectId) throws Exception;	
	public List<Object[]> getProjectList() throws Exception;
	public List<Object[]> ProjectAssignList(String EmpId)throws Exception;
	public List<Object[]> UserList(String proId) throws Exception;
	public Object[] ProjectData(String ProId)throws Exception;
	public Long ProjectAssignAdd(ProjectAssignDto proAssigndto ) throws Exception;
	public Long ProjectRevoke(ProjectAssign proAssign ) throws Exception;
	public List<Object[]> ProjectApproveAdList(String EmpId) throws Exception;
	public int ProjectApproveAd(String InitiationId, String Remark, String UserId, String EmpId,String ProjectCode,String Status,String LabCode) throws Exception;
	public List<Object[]> ApprovalStutusList(String InitiationId) throws Exception;
	public long ProjectDataSubmit(PfmsProjectDataDto dto) throws Exception;
	public List<Object[]> ProjectStageDetailsList() throws Exception;
	public Object[] ProjectDataDetails(String projectid) throws Exception;
	public long ProjectDataEditSubmit(PfmsProjectDataDto dto) throws Exception;
	public Object[] ProjectDataSpecsFileData(String projectdataid) throws Exception;
	public long ProjectDataRevSubmit(PfmsProjectDataDto projectdatadto) throws Exception;
	public List<Object[]> ProjectDataRevList(String projectid) throws Exception;
	public Object[] ProjectDataSpecsRevFileData(String projectdatarevid) throws Exception;
	public List<Object[]> InitiatedProjectDetails(String ProjectId) throws Exception;
	public List<Object[]> NodalLabList() throws Exception;
	public Object[] ProjectDataRevData(String projectdatarevid) throws Exception;
	public List<Object[]> ProjectRiskDataList(String projectid,String LabCode) throws Exception;
	public Object[] ProjectRiskData(String actionassignid) throws Exception;
	public long CloseProjectRisk(PfmsRiskDto dto )throws Exception;
	public long ProjectRiskDataSubmit(PfmsRiskDto dto) throws Exception;
	public Object[] ProjectRiskMatrixData(String actionmainid) throws Exception;
	public long ProjectRiskDataEdit(PfmsRiskDto dto) throws Exception;
	public long ProjectRiskDataRevSubmit(PfmsRiskDto dto) throws Exception;
	public List<Object[]> ProjectRiskMatrixRevList(String actionmainid) throws Exception;
	public List<Object> RiskDataPresentList(String projectid,String LabCode) throws Exception;
	public Long ProjectInitiationAuthorityAdd(PfmsInitiationAuthorityDto pfmsinitiationauthoritydto,String UserId,PfmsInitiationAuthorityFileDto pfmsinitiationauthorityfiledto) throws Exception;
 	public PfmsInitiationAuthorityFile ProjectAuthorityDownload(String AuthorityFileId) throws Exception;
 	public Long ProjectAuthorityUpdate(PfmsInitiationAuthorityDto pfmsinitiationauthoritydto,PfmsInitiationAuthorityFileDto pfmsinitiationauthorityfiledto,String UserId) throws Exception;
	public List<Object[]> getProjectCatSecDetalis(String projectmainId)throws Exception;
	public List<Object[]> LoginProjectDetailsList(String empid,String Logintype,String LabCode) throws Exception;
	public List<Object[]> ProjectApprovalFlowEmpData(String empid,String LabCode) throws Exception;
	public List<Object[]> ProjectMainList() throws Exception;
	public long ProjectMainToMaster(String projectmainid, String user,String LabCode) throws Exception;
	public ProjectMasterRev ProjectMasterREVSubmit(String projectid, String userid, String remarks) throws Exception;
	public List<Object[]> ProjectTypeMainListNotAdded() throws Exception;
	public List<Object[]> ProjectRevList(String projectid) throws Exception;
	public long ProjectMasterAttachAdd(ProjectMasterAttachDto dto) throws Exception;
	public List<Object[]> ProjectMasterAttachList(String projectid) throws Exception;
	public Object[] ProjectMasterAttachData(String projectattachid) throws Exception;
	public int ProjectMasterAttachDelete(String projectattachid) throws Exception;
	public long TechnicalWorkDataAdd(ProjectTechnicalWorkData modal) throws Exception;
	public long TechnicalWorkDataEdit(ProjectTechnicalWorkData modal,String techdataid) throws Exception;
	public List<Object[]> InitiationCheckList(String initiationid) throws Exception;
	public long IntiationChecklistUpdate(PfmsInitiationChecklistData cldata) throws Exception;
	public List<Object[]> RiskTypeList() throws Exception;
	public long ProjectRequirementAdd(PfmsInitiationRequirementDto prd,String UserId,String LabCode, String shortName) throws  Exception;
	public List<Object[]> RequirementList(String reqInitiationId) throws Exception;
	public long ProjectRequirementDelete(long initiationReqId) throws Exception;
	public Object[] Requirement(long InitiationReqId) throws Exception ;
	public long RequirementUpdate(PfmsInitiationRequirementDto prd, String userId, String initiationReqId)throws Exception;
	public long numberOfReqTypeId(String intiationId,String projectId) throws Exception;
	public List<Object[]> BudgetHeadList(Long projecttypeid)throws Exception;
	public List<Integer> reqcountList(String initiationId) throws Exception;
	public int deleteRequirement(String initiationReqId) throws Exception;
	public String getReqId(int i, String initiationId)throws Exception;
	public int updateReqId(int last, String s, int initial, String initiationId)throws Exception;
	public Object[] reqType(String r) throws Exception;
	//public long RequirementAttachmentAdd(long initiationReqId, MultipartFile[] fileAttach, String labCode)throws Exception;
	public List<Object[]> RequirementAttachmentList(String parameter) throws Exception;
	public Object[] reqAttachDownload(String DocumentId,String VersionDoc, String initiationid, String stepid)throws Exception;
	public long requirementAttachmentDelete(String attachmentid)throws Exception;
	public Object inititionSteps() throws Exception;
	public long preProjectFileupload(PreprojectFileDto pfd, MultipartFile fileAttach, String labCode,String UserId,Double version) throws Exception;
	public List<Object[]> getProjectFilese(String initiationid, String stepid) throws Exception;
	public long filecount(String stepid, String initiationid) throws Exception;
	public List<Object[]> projectfilesList(String inititationid, String stepid, String documentcount) throws Exception;
	public List<Object[]>requirementFiles(String initiationid, int stepid)throws Exception;
	public List<Object[]> sanctionlistDetails(String initiationid)throws Exception;
	public long sanctionDataUpdate(PfmsInitiationSanctionData psd)throws Exception;
	public long projectTDNUpdate(PfmsInitiationSanctionData psd)throws Exception;
	public long addProjectPGNAJ(PfmsInitiationSanctionData psd) throws Exception;
	public long ProjectPGNAJUpdate(PfmsInitiationSanctionData psd)throws Exception;
	public long projectInitiationUserUpdate(PfmsInitiation pf)throws Exception;
	public List<Object[]> projectfiles(String inititationid, String stepid) throws Exception;
	public Object[] projectfile(String initiationid, String stepid, String documentid)throws Exception;
	public List<Object[]> DemandList()throws Exception;
	public long PfmsProcurementPlanSubmit(PfmsProcurementPlan pp) throws Exception;
	public List<Object[]>  ProcurementList(String initiationid)throws Exception;
	public Object[] PocurementPlanEditDetails(String planid)throws Exception;
	public long ProjectProcurementEdit(PfmsProcurementPlan pp)throws Exception;
	public String TotalPayOutMonth(String start, String end, String initiationid)throws Exception;
	public Object[] projectMacroDetails(String initiationid)throws Exception;
	public long InsertMacroDetails(PfmsInitiationMacroDetails pm)throws Exception;
	public long updateMactroDetailsMethodology(PfmsInitiationMacroDetails pm) throws Exception;
	public long updateMactroDetailsRequirements(PfmsInitiationMacroDetails pm)throws Exception;
	public long UpdateProjectEnclosure(PfmsInitiationMacroDetails pm)throws Exception;
	public long UpdateProjectOtherInformation(PfmsInitiationMacroDetails pm)throws Exception;
	public long ProposedprojectdeliverablesUpdate(PfmsInitiationMacroDetails pm)throws Exception;
	public long ProjectMajorTrainingRequirementSubmit(ProjectMajorRequirementsDto pmr,String UserId)throws Exception;
	public List<Object[]> TrainingRequirementList(String initiationid)throws Exception;
	public Object[] TraingRequirements(String trainingid)throws Exception;
	public long ProjectMajorTrainingRequirementUpdate(ProjectMajorRequirementsDto pmr,String userid)throws Exception;
	public long WorkPackageSubmit(ProjectMajorWorkPackagesDto pwd, String userId) throws Exception;
	public List<Object[]> WorkPackageList(String initiationid)throws Exception;
	public Object[] WorkPackageValue(String parameter)throws Exception ;
	public long WorkPackagesEdit(ProjectMajorWorkPackagesDto pwd, String userId)throws Exception;
	public long CarsDetailsAdd(ProjectMajorCarsDto pcd, String userId)throws Exception;
	public List<Object[]> CarsList(String parameter)throws Exception;
	public Object[] CarsValue(String parameter)throws Exception;
	public long carsEdit(ProjectMajorCarsDto pcd, String userId)throws Exception;
	public long ConsultancySubmit(ProjectMajorConsultancyDto pcd, String userId)throws Exception;
	public List<Object[]> ConsultancyList(String initiationid)throws Exception;
	public Object[] ConsultancyValue(String parameter)throws Exception;
	public long ConsultancyEdit(ProjectMajorConsultancyDto pcd, String userId)throws Exception;
	public long ManpowerSubmit(ProjectMajorManPowersDto pmd, String userId)throws Exception;
	public List<Object[]> ManpowerList(String parameter)throws Exception;
	public Object[] ManpowerValue(String parameter)throws Exception;
	public long ManpowerEdit(ProjectMajorManPowersDto pmd, String userId)throws Exception;
	public Object[] macroDetailsPartTwo(String initiationid)throws Exception;
	public long MacroDetailsPartTwoSubmit(PfmsInitiationMacroDetailsTwo pmd)throws Exception;
	public long MacroDetailsPartTwoEdit(PfmsInitiationMacroDetailsTwo pmd)throws Exception;
	public Object[] BriefTechnicalAppreciation(String initiationid)throws Exception;
	public long BriefTechnicalAppreciationSubmit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefTechnicalAppreciationEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public List<Object[]> GetCostBreakList(String initiationid, String projecttypeid)throws Exception;
	public long ProjectCapsiSubmit(ProjectMajorCapsi pmc)throws Exception;
	public List<Object[]> CapsiList(String initiationid)throws Exception;
	public Object[] CapsiValue(String parameter)throws Exception;
	public long CapsiEdt(ProjectMajorCapsi pmc)throws Exception;
	public Object[] AllLabList(String labCode) throws Exception;
	public List<Object[]> ProcurementInitiationCostList(String initiationid, String InitiationCostId)throws Exception;
	public long BriefAchievementEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefTRLanalysisEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefpeerEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefActionEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefTestEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefMatrixEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefDevEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefProductionAgenciesEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefCriticalTechsEdit(ProjectMactroDetailsBrief pmb) throws Exception;
	public long BriefCostsBenefitsEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefProjectManagementEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefPERTEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public Object[] reqStatus(Long reqInitiationId)throws Exception;
	public int ProjectRequirementStatusUpdate(String initiationid, String projectcode, String userId,String Status, String Empid,String Remarks, String action)throws Exception;
	public List<Object[]> DocumentApprovalFlowData(String labCode, String initiationid)throws Exception;
//	public List<Object[]> RequirementApprovalList(String empId) throws Exception;
//	public List<Object[]> RequirementTrackingList(String initiationid) throws Exception;
	public List<Object[]> projecOtherRequirements(String initiationid,String projectId)throws Exception;//changed
	public long AddOtherRequirement(ProjectOtherReqDto pd, String subreqName)throws Exception;
	public List<Object[]> OtherRequirementList(String reqInitiationId, String reqMainId)throws Exception;
	public long UpdateOtherRequirementName(ProjectOtherReqDto pd)throws Exception;
	public long UpdateOtherRequirementDetails(ProjectOtherReqDto pd, String requirementId)throws Exception;
	public Object[] OtherSubRequirementsDetails(ProjectOtherReqDto pd, String requirementId) throws Exception;
	public long AddOtherRequirementDetails(String[] reqNames, String[] reqValue,String reqInitiationId)throws Exception;//chnaged
//	public long AddOtherRequirementDetails(String[] reqNames, String[] reqValue,String initiationid)throws Exception;
	//public List<Object[]> otherProjectRequirementList(String initiationid) throws Exception;
	public List<Object[]> otherProjectRequirementList(String initiationid,String projectId) throws Exception;
	public List<Object[]> getAllOtherrequirementsByInitiationId(String initiationid)throws Exception;
	public Object[] LabListDetails(String labCode)throws Exception;
	public Object[] RequirementIntro(String reqInitiationId) throws Exception;//method for intro
	public long ReqIntroSubmit(String reqInitiationId, String attributes, String details,String UserId)throws Exception;
	public long reqIntroUpdate(String reqInitiationId, String attributes, String details, String userId) throws Exception;
//	public Object[] RequirementIntro(String initiationid) throws Exception;
//	public long ReqIntroSubmit(String initiationid, String attributes, String details,String UserId)throws Exception;
//	public long reqIntroUpdate(String initiationid, String attributes, String details, String userId) throws Exception;
	public Long ReqForwardProgress(String initiationid)throws Exception;
	public long ProjectSqrSubmit(ProjectSqrFile psf, MultipartFile fileAttach, String userId,String LabCode)throws Exception;
	public Object[] SqrFiles(String reqInitiationId)throws Exception;
	public long RequirementParaSubmit(RequirementparaModel rpm)throws Exception;
	public List<Object[]> ReqParaDetails(String reqInitiationId)throws Exception;
	public long RequirementParaEdit(RequirementparaModel rpm) throws Exception;
	public Long insertRequirement(PfmsOtherReq pr)throws Exception;
	public Long insertReqType(ProjectRequirementType pt) throws Exception;
	public List<Object[]> getVerificationList(String reqInitiationId)throws Exception;
	public long insertRequirementVerification(RequirementVerification rv)throws Exception;
	public Long updateRequirementVerification(RequirementVerification rv)throws Exception;
	public long updateRequirementVerificationDetails(RequirementVerification rv)throws Exception;
	//public List<Object[]> getAbbreviationDetails(String initiationid) throws Exception;
	public List<Object[]> getAbbreviationDetails(String reqInitiationId) throws Exception;
	public long addAbbreviation(List<InitiationAbbreviations> iaList)throws Exception;
	public long addReqAppendix(PfmsInitiationAppendix pia)throws Exception;
	public List<Object[]> AppendixList(String initiationid)throws Exception;
	public long addReqAcronyms(List<RequirementAcronyms> raList) throws Exception;
//	public List<Object[]> AcronymsList(String initiationid) throws Exception;
	public List<Object[]> AcronymsList(String reqInitiationId) throws Exception;
	public long addReqPerformanceParameters(List<RequirementPerformanceParameters> raList)throws Exception;
	public List<Object[]> getPerformanceList(String reqInitiationId)throws Exception;
	//public List<Object[]> getPerformanceList(String initiationid)throws Exception;
	public long insertTestVerificationFile(ReqTestExcelFile re,String LabCode) throws Exception;
//	public Object[] getVerificationExcelData(String initiationid) throws Exception;
	public Object[] getVerificationExcelData(String initiationid,String ProjectId) throws Exception;
	//public List<Object[]> EmployeeList(String labCode, String initiationid) throws Exception;
	public List<Object[]> EmployeeList(String labCode, String reqInitiationId) throws Exception;
	public long AddreqMembers(RequirementMembers rm) throws Exception;
	//public List<Object[]> reqMemberList(String initiationid) throws Exception;
	public List<Object[]> reqMemberList(String reqInitiationId) throws Exception;
	public long addReqSummary(RequirementSummary rs)throws Exception;
	//public List<Object[]> getDocumentSummary(String initiationid)throws Exception;
	public List<Object[]> getDocumentSummary(String reqInitiationId)throws Exception;
	public long editreqSummary(RequirementSummary rs) throws Exception;
	public Object[] DocTempAttributes()throws Exception;
	public List<Object[]> ReqParaDetailsMain(String reqInitiationId) throws Exception;
	public List<Object[]> getVerificationListMain(String reqInitiationId)throws Exception;
	public List<Object[]> VPDetails(String reqInitiationId) throws Exception;
	public List<Object[]> EmployeeList1(String labCode, String testPlanInitiationId,String SpecsInitiationId) throws Exception;

	public Object[] getProjectDetails(String labcode, String projectId, String projectType) throws Exception;
	public List<Object[]> ProjectDetailesData(long initiationId) throws Exception;
	
	//specification
	public List<Object[]> initiationSpecList(String projectId, String productTreeMainId, String initiationId) throws Exception;
	public long addSpecificationContents(SpecificationContent sc) throws Exception;
	public List<Object[]> SpecContentsDetails(String specsInitiationId) throws Exception;
	public SpecificationContent getSpecificationContent(String parameter) throws Exception;
	public long addSpecification(Specification specs) throws Exception;
	public Specification getSpecificationData(String specsId) throws Exception;
	public long addSpecificationIntro(SpecificationIntro s) throws Exception;
	public List<Object[]> getSpecsIntro(String specsInitiationId)throws Exception;
	public long editSpecificationIntro(SpecificationIntro s)throws Exception;
	public long uploadProductTree(SpecifcationProductTree s,String LabCode) throws Exception;
	public List<Object[]> SpecProducTreeDetails(String specsInitiationId) throws Exception;
	
	public long projectScheduleAllPeriodEditSubmit(String initiationId) throws Exception;
	public Object[] getParaDetails(String paraid)throws Exception;
	
	
	public long addInitiationMilestone(PfmsInitiationMilestone ms)throws Exception;
	public List<Object[]> getInitiatedMilestoneDetails(String initiationid)throws Exception;
	public PfmsInitiationMilestone getInitiationMilestone(long initiationMilestoneId)throws Exception;
	public long editInitiationMilestone(PfmsInitiationMilestone ms)throws Exception;
	public long addInitiationMilestoneRev(PfmsInitiationMilestoneRev entityRev)throws Exception;
	
	public DocMembers getDocMemberById(Long MemeberId) throws Exception;
	public long editDocMember(DocMembers idm) throws Exception;
	public long UpdateInitiationReqMembers(long ReqMemberId) throws Exception;
	public List<Object[]> getsystemSpecificationList(String productTreeMainId)throws Exception;
	public List<Object[]> PlatformList();
	public List<Object[]> ProjectReviseList(String ProjectId) throws Exception;
	public Object[] ProjectOriginalData(String ProjectId) throws Exception;
	public PlatformMaster getPlatformByPlatformId(long platformId)throws Exception;  //srikant
	//29-04-2025
	public PfmsInitiationApproval getPfmsInitiationApprovalById(String enoteId)throws Exception;
	public long savePfmsInitiationApproval(PfmsInitiationApproval pe)throws Exception;
	public Object[] InitiationApprovalData(String initiationid)throws Exception;
	public long InitiationForward(PfmsInitiationApproval pe, String remarks, Long empId, String flow, String username)throws Exception;
	public List<Object[]> initiationPendingList(long empId)throws Exception;
	public Object[] NewApprovalList(String enoteId)throws Exception;
	public List<Object[]> EnoteTransactionList(String enoteTrackId)throws Exception;
	public List<Object[]> initiationApprovalList(long empId, String fromDate, String toDate)throws Exception;
	public List<Object[]> InitiationAprrovalPrintDetails(long enoteid)throws Exception;
	public List<Object[]> getProjectTeamListByLabCode(String labCode, String projectId);
	public List<RoleMaster> getRoleMasterList() throws Exception;
	public ProjectAssign getProjectAssignById(String projectEmployeeId) throws Exception;
	public Long getProjectEmployeeIdByProjectId(String projectId, String roleMasterId) throws Exception;
}
