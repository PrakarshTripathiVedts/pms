package com.vts.pfms.project.dao;

import java.util.List;

import com.vts.pfms.committee.model.CommitteeInitiation;
import com.vts.pfms.committee.model.PfmsNotification;
import com.vts.pfms.master.model.RoleMaster;
import com.vts.pfms.print.model.ProjectTechnicalWorkData;
import com.vts.pfms.project.dto.PfmsRiskDto;
import com.vts.pfms.project.model.InitiationAbbreviations;
import com.vts.pfms.project.model.PfmsApproval;
import com.vts.pfms.project.model.PfmsInitiation;
import com.vts.pfms.project.model.PfmsInitiationAppendix;
import com.vts.pfms.project.model.PfmsInitiationApproval;
import com.vts.pfms.project.model.PfmsInitiationAttachment;
import com.vts.pfms.project.model.PfmsInitiationAttachmentFile;
import com.vts.pfms.project.model.PfmsInitiationAuthority;
import com.vts.pfms.project.model.PfmsInitiationAuthorityFile;
import com.vts.pfms.project.model.PfmsInitiationChecklistData;
import com.vts.pfms.project.model.PfmsInitiationCost;
import com.vts.pfms.project.model.PfmsInitiationDetail;
import com.vts.pfms.project.model.PfmsInitiationLab;
import com.vts.pfms.project.model.PfmsInitiationMacroDetails;
import com.vts.pfms.project.model.PfmsInitiationMacroDetailsTwo;
import com.vts.pfms.project.model.PfmsInitiationMilestone;
import com.vts.pfms.project.model.PfmsInitiationMilestoneRev;
import com.vts.pfms.project.model.PfmsInitiationReqIntro;
import com.vts.pfms.project.model.PfmsInitiationSanctionData;
import com.vts.pfms.project.model.PfmsInitiationSchedule;
import com.vts.pfms.project.model.PfmsInititationRequirement;
import com.vts.pfms.project.model.PfmsOtherReq;
import com.vts.pfms.project.model.PfmsProcurementPlan;
import com.vts.pfms.project.model.PfmsProjectData;
import com.vts.pfms.project.model.PfmsProjectDataRev;
import com.vts.pfms.project.model.PfmsReqStatus;
import com.vts.pfms.project.model.PfmsRequirementApproval;
import com.vts.pfms.project.model.PfmsRisk;
import com.vts.pfms.project.model.PfmsRiskRev;
import com.vts.pfms.project.model.PlatformMaster;
import com.vts.pfms.project.model.PmsInitiationApprovalTransaction;
import com.vts.pfms.project.model.PreprojectFile;
import com.vts.pfms.project.model.ProjectAssign;
import com.vts.pfms.project.model.ProjectMactroDetailsBrief;
import com.vts.pfms.project.model.ProjectMain;
import com.vts.pfms.project.model.ProjectMajorCapsi;
import com.vts.pfms.project.model.ProjectMajorCars;
import com.vts.pfms.project.model.ProjectMajorConsultancy;
import com.vts.pfms.project.model.ProjectMajorManPowers;
import com.vts.pfms.project.model.ProjectMajorRequirements;
import com.vts.pfms.project.model.ProjectMajorWorkPackages;
import com.vts.pfms.project.model.ProjectMaster;
import com.vts.pfms.project.model.ProjectMasterAttach;
import com.vts.pfms.project.model.ProjectMasterRev;
import com.vts.pfms.project.model.ProjectOtherReqModel;
import com.vts.pfms.project.model.ProjectRequirementType;
import com.vts.pfms.project.model.ProjectSqrFile;
import com.vts.pfms.project.model.ReqTestExcelFile;
import com.vts.pfms.project.model.RequirementAcronyms;
import com.vts.pfms.project.model.RequirementMembers;
import com.vts.pfms.project.model.RequirementPerformanceParameters;
import com.vts.pfms.project.model.RequirementSummary;
import com.vts.pfms.project.model.RequirementVerification;
import com.vts.pfms.project.model.RequirementparaModel;
import com.vts.pfms.requirements.model.DocMembers;
import com.vts.pfms.requirements.model.SpecifcationProductTree;
import com.vts.pfms.requirements.model.Specification;
import com.vts.pfms.requirements.model.SpecificationContent;
import com.vts.pfms.requirements.model.SpecificationIntro;

public interface ProjectDao {

	public List<Object[]> ProjectIntiationList(String Empid,String LoginType,String LabCode) throws Exception;
	public List<Object[]> ProjectTypeList() throws Exception;
	public List<Object[]> OfficerList() throws Exception;
	public Long ProjectMainAdd(ProjectMain proType ) throws Exception;
	public Long ProjectMainClose(ProjectMain proType) throws Exception;
	public Object[] ProjectMainEditData(String ProjectMainId) throws Exception ;
	public Long ProjectMainEdit(ProjectMain proType ) throws Exception;
	public List<Object[]> PfmsCategoryList() throws Exception;
	public List<Object[]> PfmsDeliverableList() throws Exception;
	public List<Object[]> LabList(String IntiationId) throws Exception;
	public Long ProjectIntiationAdd(PfmsInitiation pfmsinitiation,PfmsNotification notification) throws Exception;
	public Long ProjectShortNameCount(String ProjectShortName) throws Exception;
	public List<Object[]> ProjectDetailes(Long IntiationId) throws Exception;
	public List<Object[]> ProjectDetailsPreview(Long IntiationId) throws Exception;
	public Long ProjectIntiationDetailAdd(PfmsInitiationDetail pfmsinitiationdetail) throws Exception;
	public int ProjectLabAdd(List<PfmsInitiationLab> pfmsinitiationlablist,PfmsInitiation pfmsinitiation) throws Exception;
	public List<Object[]> ProjectIntiationLabList(String InitiationId) throws Exception;
	public List<Object[]> BudgetItem(String BudegtId) throws Exception;
	public List<Object[]> ProjectIntiationItemList(String InitiationId) throws Exception;
	public Long ProjectIntiationCostAdd(PfmsInitiationCost pfmsinitiationcost ,String ReFe,PfmsInitiation pfmsinitiation) throws Exception;
	public List<Object[]> BudgetHead() throws Exception;
	public Long ProjectScheduleAdd(List<PfmsInitiationSchedule> pfmsinitiationschedulelist, PfmsInitiation pfmsinitiation) throws Exception;
	public List<Object[]> ProjectIntiationScheduleList(String InitiationId) throws Exception;
	//line added
	public List<Object[]>ProjectScheduleTotalMonthList(String InitiationId)throws Exception;
	/*L.A*/public List<Object[]>MileStonenoTotalMonths(String InitiationId,int msno) throws Exception;
	public Object[] ProjectProgressCount(String InitiationId) throws Exception;
	public  List<Object[]> ProjectIntiationDetailsList(String InitiationId) throws Exception;
	public List<Object[]> ProjectIntiationCostList(String InitiationId) throws Exception;
	public List<Object[]> ProjectEditData(String IntiationId) throws Exception;
	public int ProjectIntiationEdit(PfmsInitiation pfmsinitiation) throws Exception;
	public Double TotalIntiationCost(String IntiationId) throws Exception;
	public Double TotalIntiationFeCost(String IntiationId) throws Exception;
	public Double TotalIntiationReCost(String IntiationId) throws Exception;
	public List<Object[]> ProjectCostEditData(String InitiationCostId) throws Exception;
	public Long ProjectInitiationDetailsUpdate(PfmsInitiationDetail pfmsinitiationdetail,String Details) throws Exception;
	public int ProjectIntiationCostEdit(PfmsInitiationCost pfmsinitiationcost) throws Exception;
	public long ProjectScheduleEdit(PfmsInitiationSchedule pfmsinitiationschedule,PfmsInitiation pfmsinitiation) throws Exception;
//	public int ProjectScheduleEdit(PfmsInitiationSchedule pfmsinitiationschedule,PfmsInitiation pfmsinitiation) throws Exception;
	/*L.A*/	 public int MilestoneTotalMonthUpdate(int newMilestoneTotalMonth, String IntiationId, String milestoneno) throws Exception;
	public int ProjectScheduleDelete(PfmsInitiationSchedule pfmsinitiationschedule,PfmsInitiation pfmsinitiation) throws Exception;
	public Integer ProjectScheduleMonth(String InitiationId) throws Exception;
/*L.A*/	   public Integer ProjectDurationMonth(String InitiationId)throws Exception;
/*L.A*/	public Integer MilestoneScheduleMonth(String initiationscheduleid,String IntiationId)throws Exception;
	public int ProjectMileStoneNo(String InitiationId) throws Exception;
	public int ProjectScheduleEditData(String InitiationScheduleId) throws Exception;
	/*L.A*/public int mileStonemonthprevious(String IntiationId, String milestoneno) throws Exception;
	/*L.A*/public int milestonenototalmonth(String IntiationId, String milestoneno) throws Exception;
	public Long ProjectInitiationAttachmentAdd(PfmsInitiationAttachment pfmsinitiationattachment,PfmsInitiationAttachmentFile pfmsinitiationattachmentfile) throws Exception;
	public List<Object[]> ProjectIntiationAttachment(String InitiationId) throws Exception;
	public List<Object[]> AuthorityAttachment(String InitiationId) throws Exception;
	public PfmsInitiationAttachmentFile ProjectIntiationAttachmentFile(String InitiationAttachmentId) throws Exception;
	public Object[] ProjectIntiationFileName(long InitiationAttachmentId) throws Exception;
	public int ProjectInitiationAttachmentDelete(PfmsInitiationAttachment pfmsinitiationattachment) throws Exception;
	public int ProjectInitiationAttachmentUpdate(PfmsInitiationAttachment pfmsinitiationattachment) throws Exception;
	public String ProjectIntiationAttachmentFileName(String InitiationAttachmentId) throws Exception;
	public String ProjectIntiationAttachmentFileNamePath(String InitiationAttachmentId) throws Exception;
	public int ProjectLabdelete(PfmsInitiationLab pfmsinitiationlab,PfmsInitiation pfmsinitiation) throws Exception;
	public int ProjectIntiationCostDelete(PfmsInitiationCost pfmsinitiationcost) throws Exception;
	public int ProjectIntiationStatusUpdate(PfmsInitiation pfmsinitiation,PfmsApproval pfmsapproval,PfmsNotification notification) throws Exception;
	public Long DivisionHeadId(String EmpId) throws Exception;
	public Long ProjectForwardStatus(String InitiationId) throws Exception;
	public List<Object[]> ProjectActionList(String ProjectAuthorityId) throws Exception;
	public List<Object[]> ProjectApprovePdList(String EmpId) throws Exception;
	public int ProjectApprove(PfmsInitiation pfmsinitiation,PfmsApproval pfmsapproval,PfmsNotification notification) throws Exception;
	public Long RtmddoId() throws Exception;
	public Long TccChairpersonId(String LabCode) throws Exception;
	public Long CcmChairpersonId(String Labcode) throws Exception;
	public Long AdId() throws Exception;
	public List<Object[]> EmployeeList(String LabCode) throws Exception;
	public List<Object[]> ProjectStatusList(String EmpId, String LoginType,String LabCode)throws Exception;
	public List<Object[]> ProjectApprovalTracking(String InitiationId) throws Exception;
	public List<Object[]> ProjectApproveRtmddoList(String EmpId) throws Exception;
	public List<Object[]> ProjectApproveTccList(String EmpId) throws Exception;
	public List<Object[]> ProjectCost(Long IntiationId) throws Exception;
	public List<Object[]> TccProjectList() throws Exception;
	public List<Object[]> ExpertList() throws Exception;
	public double PfmsInitiationRefeSum(String initiationid,String refe) throws Exception;
	public int ProjectIntiationCostsUpdate(PfmsInitiation pfmsinitiation) throws Exception ;
	public List<Object[]> ProjectMainList()throws Exception;
	public List<Object[]> ProjectList()throws Exception;
	public List<Object[]> ProjectTypeMainList()throws Exception;
	public List<Object[]> ProjectCategoryList()throws Exception;
	public Long ProjectMasterAdd(ProjectMaster proType) throws Exception;
	public Long ProjectEdit(ProjectMaster proType) throws Exception;
	public Long ProjectClose(ProjectMaster proType) throws Exception;
	public Object[] ProjectEditData1(String ProjectId) throws Exception ;
	public List<Object[]> getProjectList() throws Exception;
	public List<Object[]> ProjectAssignList(String EmpId)throws Exception;
	public List<Object[]> UserList(String proId) throws Exception;
	public Object[] ProjectData(String ProId)throws Exception;
	public Long ProjectAssignAdd(ProjectAssign proAssign ) throws Exception;
	public Long ProjectRevoke(ProjectAssign proAssign ) throws Exception;
	public List<Object[]> ProjectApproveAdList(String EmpId) throws Exception;
	public List<Object[]> ApprovalStutusList(String AuthoId) throws Exception;
	public long ProjectDataSubmit(PfmsProjectData pfmsprojectdata) throws Exception;
	public List<Object[]> ProjectStageDetailsList() throws Exception;
	public Object[] ProjectDataDetails(String projectid) throws Exception;
	public long ProjectDataEditSubmit(PfmsProjectData pfmsprojectdata, String querystr) throws Exception;
	public Object[] ProjectDataSpecsFileData(String projectdataid) throws Exception;
	public long ProjectRevDataSubmit(PfmsProjectDataRev pfmsprojectrevdata) throws Exception;
	public List<Object[]> ProjectDataRevList(String projectid) throws Exception;
	public Object[] ProjectDataSpecsRevFileData(String projectdatarevid) throws Exception;
	public List<Object[]> InitiatedProjectList() throws Exception;
	public List<Object[]> InitiatedProjectDetails(String ProjectId) throws Exception;
	public List<Object[]> NodalLabList() throws Exception;
	public Object[] ProjectDataRevData(String projectdatarevid) throws Exception;
	public List<Object[]> SubProjectList(String InitiationId) throws Exception;
    public String StatusDetails(String Status)throws Exception;
    public Long EmpId(String InitiationId) throws Exception;
	public List<Object[]> ProjectRiskDataList(String projectid,String LabCode) throws Exception;
	public Object[] ProjectRiskData(String actionassignid) throws Exception;
	public long CloseProjectRisk(PfmsRiskDto dto)throws Exception;
	public long ProjectRiskDataSubmit(PfmsRisk model) throws Exception;
	public Object[] ProjectRiskMatrixData(String actionmainid) throws Exception;
	public int ProjectRiskDataEdit(PfmsRiskDto dto) throws Exception;
	public long ProjectRiskDataRevSubmit(PfmsRiskRev model) throws Exception;
	public List<Object[]> ProjectRiskMatrixRevList(String actionmainid) throws Exception;
	public List<Object> RiskDataPresentList(String projectid,String LabCode) throws Exception;
    public Long ProjectInitiationAuthorityAdd(PfmsInitiationAuthority pfmsauthority,PfmsInitiationAuthorityFile pfmsinitiationauthorityfile) throws Exception;
	public PfmsInitiationAuthorityFile ProjectAuthorityDownload(String AuthorityFileId) throws Exception;
	public Long ProjectAuthorityUpdate(PfmsInitiationAuthority pfmsauthority) throws Exception;
	public Long AuthorityFileUpdate(PfmsInitiationAuthorityFile pfmsinitiationauthorityfile) throws Exception;
	public List<Object[]> getProjectCatSecDetalis(Long projectId)throws Exception;
	public List<Object[]> LoginProjectDetailsList(String empid, String Logintype ,String LabCode) throws Exception;
	public List<Object[]> DoRtmdAdEmpData(String Labcode) throws Exception;
	public Object[] DirectorEmpData(String LabCode) throws Exception;
	public Object[] EmpDivHeadData(String empid) throws Exception;
	public ProjectMain ProjectMainObj(String projectmainid) throws Exception;
	public List<Object[]> InitCommDefault() throws Exception;
	public long InitiationCommitteeAdd(CommitteeInitiation model) throws Exception;
	public ProjectMaster ProjectMasterData(long projectid) throws Exception;
	public ProjectMasterRev ProjectREVSubmit(ProjectMasterRev masterrev) throws Exception;
	public List<Object[]> ProjectTypeMainListNotAdded() throws Exception;
	public List<Object[]> ProjectRevList(String projectid) throws Exception;
	public long ProjectMasterAttachAdd(ProjectMasterAttach modal) throws Exception;
	public List<Object[]> ProjectMasterAttachList(String projectid) throws Exception;
	public Object[] ProjectMasterAttachData(String projectattachid) throws Exception;
	public int ProjectMasterAttachDelete(String projectattachid) throws Exception;
	public long TechnicalWorkDataAdd(ProjectTechnicalWorkData modal) throws Exception;
	public long TechnicalWorkDataEdit(ProjectTechnicalWorkData modal,long techdataid) throws Exception;
	public List<Object[]> InitiationCheckList(String initiationid) throws Exception;
	public long InitiationChecklistAdd(PfmsInitiationChecklistData cldata) throws Exception;
	public PfmsInitiationChecklistData InitiationChecklistCheck(PfmsInitiationChecklistData cldata) throws Exception;
	public long InitiationChecklistUpdate(PfmsInitiationChecklistData cldata) throws Exception;
	public List<Object[]> RiskTypeList() throws Exception;
	/**/public List<Object[]>RequirementTypeList()throws Exception;
	public PfmsInitiationSchedule getInitiationSchedule(String InitiationScheduleId) throws Exception;
	public int InitiationClearTotalMonth(String InitiationId) throws Exception;
	public List<PfmsInitiationSchedule> IntiationScheduleList(String InitiationId) throws Exception;
	public PfmsInitiationSchedule MilestoneData(long InitiationId, int MilestoneNo) throws Exception;
	public long ProjectRequirementAdd(PfmsInititationRequirement pir) throws Exception;
	public List<Object[]> RequirementList(String reqInitiationId) throws Exception;
	public long ProjectRequirementDelete(long initiationReqId) throws Exception;
	public Object[] Requirement(long InitiationReqId) throws Exception;
//	public long RequirementUpdate(PfmsInititationRequirement pir, String initiationReqId) throws Exception;
	public long numberOfReqTypeId(String intiationId,String projectId)throws Exception;
	public List<Object[]> BudgetHeadList(Long projecttypeid) throws Exception;
	public List<Integer> reqcountList(String initiationId) throws Exception;
	public int deleteRequirement(String initiationReqId)throws Exception;
	public String getReqId(int i, String initiationId)throws Exception;
	public int updateReqId(int last, String s, int first, String initiationId)throws Exception;
	public Object[] reqType(String r) throws Exception;
	public List<Object[]> RequirementAttachmentList(String inititationReqId)throws Exception;
	public Object[] reqAttachDownload(String DocumentId,String VersionDoc,String initiationid, String stepid) throws Exception;
	public long requirementAttachmentDelete(String attachmentid)throws Exception;
	public Object initiationSteps()throws Exception;
	public long preProjectFileUpload(PreprojectFile pf) throws Exception;
	public List<Object[]> getProjectFilese(String initiationid, String stepid) throws Exception;
	public long filecount(String stepid, String initiationid)throws Exception;
	public List<Object[]> projectfilesList(String inititationid, String stepid, String documentcount)throws Exception;
	public List<Object[]> requirementFiles(String initiationid, int stepid)throws Exception;
	public List<Object[]> sanctionlistDetails(String initiationid)throws Exception;
	public PfmsInitiationSanctionData sanctionDataUpdate(PfmsInitiationSanctionData psd) throws Exception;
	public long sanctionDataUpdated(PfmsInitiationSanctionData pd)throws Exception;
	public long sanctionDataAdd(PfmsInitiationSanctionData psd)throws Exception;
	public long projectTDNUpdate(PfmsInitiationSanctionData psd)throws Exception;
	public long addProjectPGNAJ(PfmsInitiationSanctionData psd) throws Exception;
	public long ProjectPGNAJUpdate(PfmsInitiationSanctionData psd)throws Exception;
	public long projectInitiationUserUpdate(PfmsInitiation pf)throws Exception;
	public List<Object[]> projectfiles(String inititationid, String stepid)throws Exception;
	public Object[] projectfile(String initiationid, String stepid, String documentid) throws Exception;
	public List<Object[]> DemandList()throws Exception;
	public long PfmsProcurementPlanSubmit(PfmsProcurementPlan pp)throws Exception;
	public List<Object[]> ProcurementList(String initiationid)throws Exception;
	
	
	public Object[] PocurementPlanEditDetails(String planid)throws Exception;
	public long ProjectProcurementEdit(PfmsProcurementPlan pp)throws Exception;
	public String TotalPayOutMonth(String start, String end, String initiationid)throws Exception;
	public Object[] projectMacroDetails(String initiationid)throws Exception;
	public long InsertMacroDetails(PfmsInitiationMacroDetails pm)throws Exception;
	public long updateMactroDetailsMethodology(PfmsInitiationMacroDetails pm) throws Exception;
	public long updateMactroDetailsRequirements(PfmsInitiationMacroDetails pm) throws Exception;
	public long UpdateProjectEnclosure(PfmsInitiationMacroDetails pm)throws Exception;
	public long UpdateProjectOtherInformation(PfmsInitiationMacroDetails pm)throws Exception;
	public long ProposedprojectdeliverablesUpdate(PfmsInitiationMacroDetails pm)throws Exception;
	public long ProjectMajorTrainingRequirementSubmit(ProjectMajorRequirements PMR)throws Exception;
	public List<Object[]> TrainingRequirementList(String initiationid)throws Exception;
	public Object[] TraingRequirements(String trainingid)throws Exception;
	public long ProjectMajorTrainingRequirementUpdate(ProjectMajorRequirements pmr)throws Exception;
	public long WorkPackageSubmit(ProjectMajorWorkPackages pw)throws Exception;
	public List<Object[]> WorkPackageList(String initiationid)throws Exception;
	public Object[] WorkPackageValue(String parameter)throws Exception;
	public long WorkPackagesEdit(ProjectMajorWorkPackages pw)throws Exception;
	public long CarsDetailsAdd(ProjectMajorCars pmc)throws Exception;
	public List<Object[]> CarsList(String parameter)throws Exception;
	public Object[] CarsValue(String parameter)throws Exception ;
	public long CarEdit(ProjectMajorCars pmc)throws Exception;
	public long ConsultancySubmit(ProjectMajorConsultancy pmc)throws Exception;
	public List<Object[]> ConsultancyList(String initiationid)throws Exception;
	public Object[] ConsultancyValue(String parameter)throws Exception;
	public long ConsultancyEdit(ProjectMajorConsultancy pmc)throws Exception;
	public long ManpowerSubmit(ProjectMajorManPowers pm)throws Exception;
	public List<Object[]> ManpowerList(String parameter)throws Exception;
	public Object[] ManpowerValue(String parameter)throws Exception;
	public long ManPowerEdit(ProjectMajorManPowers pm)throws Exception;
	public Object[] macroDetailsPartTwo(String initiationid)throws Exception;
	public long MacroDetailsPartTwoSubmit(PfmsInitiationMacroDetailsTwo pmd)throws Exception;
	public long MacroDetailsPartTwoEdit(PfmsInitiationMacroDetailsTwo pmd) throws Exception;
	public Object[] BriefTechnicalAppreciation(String initiationid)throws Exception;
	public long BriefTechnicalAppreciationSubmit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefTechnicalAppreciationEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public List<Object[]> GetCostBreakList(String initiationid, String projecttypeid)throws Exception;
	public long ProjectCapsiSubmit(ProjectMajorCapsi pmc)throws Exception;
	public List<Object[]> CapsiList(String initiationid)throws Exception;
	public Object[] CapsiValue(String parameter) throws Exception;
	public long CapsiEdt(ProjectMajorCapsi pmc) throws Exception;
	public Object[] ALlLabList(String labCode)throws Exception;
	public List<Object[]> ProcurementInitiationCostList(String initiationid, String initiationCostId)throws Exception;
	public long BriefAchievementEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefTRLanalysisEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefpeerEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefActionEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefTestEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefMatrixEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefDevEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefProductionAgenciesEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefCriticalTechsEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefCostsBenefitsEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefProjectManagementEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public long BriefPERTEdit(ProjectMactroDetailsBrief pmb)throws Exception;
	public Object[] reqStatus(Long initiationId)throws Exception;
	public long ProjectRequirementAdd(PfmsInititationRequirement pir, PfmsReqStatus prs)throws Exception;
	public String getEmpId(String pdd)throws Exception;
	public int ProjectRequirementStatusUpdate(PfmsReqStatus prs, PfmsRequirementApproval approval,PfmsNotification notification)throws Exception;
	public List<Object[]> DocumentApprovalFlowData(String labCode, String initiationid)throws Exception;
	public String maxRequirementVersion(Long initiationId) throws Exception;
	public String getInitiationReviewer(String initiationid)throws Exception;
//	public List<Object[]> RequirementApprovalList(String empId)throws Exception;
	public String getInitiationApprover(String initiationid)throws Exception;
//	public List<Object[]> RequirementTrackingList(String initiationid)throws Exception;
	public List<Object[]> projecOtherRequirements(String initiationid,String projectid)throws Exception;//changed
	public List<Object[]> OtherRequirementList(Long reqInitiationId, Long reqMainId) throws Exception;
	public long ProjectOtherRequirementAdd(ProjectOtherReqModel pm) throws Exception;
	public long UpdateOtherRequirementName(ProjectOtherReqModel pm)throws Exception;
	public long UpdateOtherRequirementDetails(ProjectOtherReqModel pm)throws Exception;
	public String getRequirementId(Long initiationId, Long reqMainId, int i)throws Exception;
	public Object[] OtherSubRequirementsDetails(String requirementId)throws Exception;
	public List<Object[]> otherProjectRequirementList(String initiationid,String projectId)throws Exception;
	public List<Object[]> getAllOtherReqByInitiationId(String initiationid) throws Exception;
	public Object[] LabListDetails(String labCode) throws Exception;
	public Object[] RequirementIntro(String reqInitiationId) throws Exception;
	public long ReqIntroSubmit(PfmsInitiationReqIntro pr) throws Exception ;
	public long ReqIntroUpdate(PfmsInitiationReqIntro pr, String details) throws Exception;
	public Long ReqForwardProgress(String initiationid)throws Exception;
	public long ProjectSqrSubmit(ProjectSqrFile psf)throws Exception;
	public Object[] SqrFiles(String reqInitiationId)throws Exception;
	public long RequirementParaSubmit(RequirementparaModel rpm)throws Exception;
	public List<Object[]> ReParaDetails(String initiationid)throws Exception;
	public long RequirementParaEdit(RequirementparaModel rpm) throws Exception;
	public Long insertRequirement(PfmsOtherReq pr)throws Exception;
	public Long insertReqType(ProjectRequirementType pt)throws Exception;
	public List<Object[]> getVerificationList(String reqInitiationId)throws Exception;
	public long insertRequirementVerification(RequirementVerification rv)throws Exception;
	public Long updateRequirementVerification(RequirementVerification rv)throws Exception;
	public long updateRequirementVerificationDetails(RequirementVerification rv)throws Exception;
	public List<Object[]> getAbbreviationDetails(String reqInitiationId) throws Exception;
//	public List<Object[]> getAbbreviationDetails(String initiationid) throws Exception;
	public long addAbbreviation(List<InitiationAbbreviations> iaList) throws Exception;
	public long addReqAppendix(PfmsInitiationAppendix pia)throws Exception;
	public List<Object[]> AppendixList(String initiationid)throws Exception;
	public Long addReqAcronyms(List<RequirementAcronyms> raList)throws Exception;
	public List<Object[]> getAcronymsList(String reqInitiationId) throws Exception;
	public long addReqPerformanceParameters(List<RequirementPerformanceParameters> raList) throws Exception;
	public List<Object[]> getPerformanceList(String reqInitiationId) throws Exception;
	//public List<Object[]> getPerformanceList(String initiationid) throws Exception;
	public long insertTestVerificationFile(ReqTestExcelFile re) throws Exception;
	//public Object[] getVerificationExcelData(String initiationid) throws Exception;
	public Object[] getVerificationExcelData(String initiationid, String ProjectId) throws Exception;
	public List<Object[]> EmployeeList(String labCode, String reqInitiationId) throws Exception;
	//public List<Object[]> EmployeeList(String labCode, String initiationid) throws Exception;
	public long AddreqMembers(RequirementMembers r) throws Exception;
	//public List<Object[]> reqMemberList(String initiationid) throws Exception;
	public List<Object[]> reqMemberList(String reqInitiationId) throws Exception;
	public long addReqSummary(RequirementSummary rs)throws Exception;
	//public List<Object[]> getDocumentSummary(String initiationid) throws Exception;
	public List<Object[]> getDocumentSummary(String reqInitiationId) throws Exception;
	public long editreqSummary(RequirementSummary rs) throws Exception;
	public Object[] DocTempAttributes()throws Exception;
	public List<Object[]> ReParaDetailsMain(String reqInitiationId)throws Exception;
	public List<Object[]> getVerificationListMain(String reqInitiationId)throws Exception;
	public List<Object[]> VPDetails(String reqInitiationId) throws Exception;
	public List<Object[]> EmployeeList1(String labCode, String testPlanInitiationId,String SpecsInitiationId) throws Exception;
	public Object[] getProjectDetails(String labcode, String projectId, String projectType) throws Exception;
	public List<Object[]> ProjectDetailesData(long initiationId) throws Exception;
	
	//specification
	public List<Object[]> initiationSpecList(String projectId, String mainId, String initiationId)throws Exception;
	public long addSpecificationContents(SpecificationContent sc) throws Exception;
	public List<Object[]> SpecContentsDetails(String specsInitiationId) throws Exception;
	public SpecificationContent getSpecificationContent(String contentid) throws Exception;
	public long addSpecification(Specification specs) throws Exception;
	public Specification getSpecificationData(String specsId) throws Exception;
	public long addSpecificationIntro(SpecificationIntro s)throws Exception;
	public List<Object[]> getSpecsIntro(String specsInitiationId)throws Exception;
	public long editSpecificationIntro(SpecificationIntro s)throws Exception;
	public long uploadProductTree(SpecifcationProductTree s)throws Exception;
	public List<Object[]> SpecProducTreeDetails(String specsInitiationId)throws Exception;
	
	public PfmsInitiation getPfmsInitiationById(String initiationId) throws Exception;
	public long ProjectScheduleEdit(PfmsInitiationSchedule pfmsinitiationschedule) throws Exception;
	public Object[] getParaDetails(String paraid)throws Exception;

	
	public long addInitiationMilestone(PfmsInitiationMilestone ms)throws Exception;
	public List<Object[]> getInitiatedMilestoneDetails(String initiationid)throws Exception;
	public PfmsInitiationMilestone getInitiationMilestone(long initiationMilestoneId)throws Exception;
	public long editInitiationMilestone(PfmsInitiationMilestone ms)throws Exception;
	public long addInitiationMilestoneRev(PfmsInitiationMilestoneRev entityRev)throws Exception;
	
	public DocMembers getDocMemberById(Long MemeberId) throws Exception;
	public long editDocMember(DocMembers idm) throws Exception;
	public long UpdateInitiationReqMembers(long reqMemberId) throws Exception;
	public List<Object[]> getsystemSpecificationList(String productTreeMainId)throws Exception;
	public List<Object[]> PlatformList();
	public Object[] ProjectOriginalData(String ProjectId) throws Exception;
	public List<Object[]> ProjectReviseList(String ProjectId) throws Exception;
	public PlatformMaster getPlatformByPlatformId(long platformId) throws Exception; //srikant;

	
	
	public PfmsInitiationApproval getPfmsInitiationApprovalById(String enoteId)throws Exception;
	public long savePfmsInitiationApproval(PfmsInitiationApproval pe)throws Exception;
	public Object[] InitiationApprovalData(String initiationid)throws Exception;
	public long savePmsInitiationApprovalTransaction(PmsInitiationApprovalTransaction pt)throws Exception;
	public List<Object[]> initiationPendingList(long empId)throws Exception;
	public Object[] NewApprovalList(String enoteId)throws Exception;
	public List<Object[]> EnoteTransactionList(String enoteTrackId)throws Exception;
	public List<Object[]> initiationApprovalList(long empId, String fromDate, String toDate)throws Exception;
	public List<Object[]> InitiationAprrovalPrintDetails(long enoteid)throws Exception;
	public List<Object[]> getProjectTeamListByLabCode(String labCode, String projectId);
	public List<RoleMaster> getRoleMasterList() throws Exception;
	public ProjectAssign getProjectAssignById(String projectEmployeeId) throws Exception;
	public Long getProjectEmployeeIdByProjectId(String projectId, String roleMasterId) throws Exception;
}
